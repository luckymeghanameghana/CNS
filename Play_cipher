import java.util.*;

public class PlayfairCipher {

    private static char[][] m = new char[5][5];
    private static Set<Character> s = new LinkedHashSet<>();

    public static void genKey(String k) {
        k = k.toUpperCase().replaceAll("[^A-Z]", "");
        s.add('J');
        for (char ch : k.toCharArray()) {
            s.add(ch);
        }
        for (char c = 'A'; c <= 'Z'; c++) {
            if (c != 'J') {
                s.add(c);
            }
        }
        Iterator<Character> it = s.iterator();
        for (int i = 0; i < 5; i++) {
            for (int j = 0; j < 5; j++) {
                m[i][j] = it.next();
            }
        }
    }

    public static String[] pairs(String in) {
        in = in.toUpperCase().replaceAll("[^A-Z]", "");
        StringBuilder sb = new StringBuilder();
        for (int i = 0; i < in.length(); i++) {
            sb.append(in.charAt(i));
            if (i < in.length() - 1 && in.charAt(i) == in.charAt(i + 1)) {
                sb.append('X');
            }
        }
        if (sb.length() % 2 != 0) {
            sb.append('X');
        }
        return sb.toString().split("(?<=\\G..)");
    }

    public static String proc(String t, boolean e) {
        String[] p = pairs(t);
        StringBuilder r = new StringBuilder();
        for (String x : p) {
            int[] a = pos(x.charAt(0));
            int[] b = pos(x.charAt(1));
            if (a[0] == b[0]) {
                r.append(m[a[0]][(a[1] + (e ? 1 : 4)) % 5]);
                r.append(m[b[0]][(b[1] + (e ? 1 : 4)) % 5]);
            } else if (a[1] == b[1]) {
                r.append(m[(a[0] + (e ? 1 : 4)) % 5][a[1]]);
                r.append(m[(b[0] + (e ? 1 : 4)) % 5][b[1]]);
            } else {
                r.append(m[a[0]][b[1]]);
                r.append(m[b[0]][a[1]]);
            }
        }
        return r.toString();
    }

    public static int[] pos(char c) {
        for (int i = 0; i < 5; i++) {
            for (int j = 0; j < 5; j++) {
                if (m[i][j] == c) {
                    return new int[]{i, j};
                }
            }
        }
        return null;
    }

    public static void main(String[] a) {
        String k = "MONARCHY", msg = "HELLO";
        genKey(k);
        String e = proc(msg, true);
        String d = proc(e, false);
        System.out.println("Original:" + msg);
        System.out.println("Encrypted:" + e);
        System.out.println("Decrypted:" + d);
    }
}
